---
import "../styles/global.css"

interface UserInfo {
  nombre?: string
  apellido?: string
  correo?: string
  dni?: string
  rol?: "ALUMNO" | "DOCENTE" | "ADMINISTRADOR"
}

interface Props {
  title: string
}

const { title } = Astro.props

const userInfoCookie = Astro.cookies.get("userInfo")?.value
let userInfo: UserInfo = {}
let basePath = "/"

let userName = "Usuario"
let userEmail = ""
let userDni = ""
let userRol: UserInfo["rol"] = undefined

try {
  if (userInfoCookie) {
    userInfo = JSON.parse(decodeURIComponent(userInfoCookie))

    const { nombre, apellido, correo, dni, rol } = userInfo

    userName = [nombre, apellido].filter(Boolean).join(" ") || "Usuario"
    userEmail = correo || ""
    userDni = dni || ""
    userRol = rol

    switch (rol) {
      case "ADMINISTRADOR":
        basePath = "/dashboard"
        break
      case "ALUMNO":
        basePath = "/resources"
        break
      case "DOCENTE":
        basePath = "/resources"
        break
      default:
        basePath = "/"
    }
  }
} catch (err) {
  console.error("Error al parsear userInfo:", err)
}
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="shortcut icon" href="favicon.svg" />
    <title>UTP+mentor - {title}</title>
  </head>
  <body class="min-h-screen bg-gray-100">
    <div
      class="lg:hidden fixed top-0 left-0 w-full bg-white z-20 flex items-center justify-between p-4 shadow-md"
    >
      <div class="flex items-center space-x-3">
        <div
          class="w-8 h-8 rounded-full bg-gray-300 flex items-center justify-center"
        >
          <span class="text-gray-600 font-bold"></span>
        </div>
        <div class="truncate max-w-[200px]">
          <p class="font-medium text-sm">{userEmail}</p>
          <p class="text-xs text-gray-500">{userRol}</p>
        </div>
      </div>

      <button id="menuToggle" class="text-gray-700 focus:outline-none">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-6 w-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>

    <aside
      id="sidebar"
      class="fixed inset-y-0 left-0 transform -translate-x-full lg:translate-x-0 z-30 w-64 bg-white shadow-md flex flex-col h-full transition-transform duration-300 ease-in-out"
    >
      <div class="p-4 border-b border-gray-300">
        <div class="flex items-center space-x-3">
          <div
            class="w-10 h-10 rounded-full bg-gray-300 flex items-center justify-center"
          >
            <span class="text-gray-600 font-bold"></span>
          </div>
          <div class="truncate">
            <p class="font-medium">{userEmail}</p>
            <p class="text-xs text-gray-500">{userRol}</p>
          </div>
        </div>
      </div>

      <nav class="flex-1 p-4 overflow-y-auto">
        <ul class="space-y-2">
          <li>
            <a
              href={basePath}
              class="flex items-center font-normal p-2 rounded hover:bg-black hover:text-white hover:font-bold text-gray-700 duration-500 trasition-all ease-in-out"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5 mr-3 flex-shrink-0"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"
                ></path>
              </svg>
              <span class="truncate">Inicio</span>
            </a>
          </li>
          <li>
            <a
              href=`${basePath}/usuarios`
              class="flex items-center font-normal p-2 rounded hover:bg-black hover:text-white hover:font-bold text-gray-700 duration-500 trasition-all ease-in-out"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5 mr-3 flex-shrink-0"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                ></path>
              </svg>
              <span class="truncate">Usuarios</span>
            </a>
          </li>
        </ul>
      </nav>

      <div class="p-4 border-t border-gray-300">
        <button
          id="logoutBtn"
          class="w-full bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 flex items-center justify-center"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="h-5 w-5 mr-2 flex-shrink-0"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"
            ></path>
          </svg>
          Cerrar sesión
        </button>
      </div>

      <button
        id="closeSidebar"
        class="lg:hidden absolute top-4 right-4 text-gray-500 hover:text-gray-700"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="h-6 w-6"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </aside>

    <div
      id="sidebarBackdrop"
      class="fixed inset-0 bg-transparent bg-opacity-50 z-20 hidden lg:hidden"
    >
    </div>

    <main
      class="lg:ml-64 pt-4 lg:pt-6 px-4 lg:px-6 min-h-screen transition-all duration-300 ease-in-out mt-16 lg:mt-0"
    >
      <slot />
    </main>

    <script>
      const sidebar = document.getElementById("sidebar")
      const menuToggle = document.getElementById("menuToggle")
      const closeSidebar = document.getElementById("closeSidebar")
      const sidebarBackdrop = document.getElementById("sidebarBackdrop")
      const logoutBtn = document.getElementById("logoutBtn")

      menuToggle?.addEventListener("click", () => {
        sidebar?.classList.toggle("-translate-x-full")
        sidebarBackdrop?.classList.toggle("hidden")
        document.body.classList.toggle("overflow-hidden")
      })

      closeSidebar?.addEventListener("click", () => {
        sidebar?.classList.add("-translate-x-full")
        sidebarBackdrop?.classList.add("hidden")
        document.body.classList.remove("overflow-hidden")
      })

      sidebarBackdrop?.addEventListener("click", () => {
        sidebar?.classList.add("-translate-x-full")
        sidebarBackdrop?.classList.add("hidden")
        document.body.classList.remove("overflow-hidden")
      })

      window.addEventListener("resize", () => {
        if (window.innerWidth >= 1024) {
          sidebar?.classList.remove("-translate-x-full")
          sidebarBackdrop?.classList.add("hidden")
          document.body.classList.remove("overflow-hidden")
        } else {
          sidebar?.classList.add("-translate-x-full")
        }
      })

      logoutBtn?.addEventListener("click", async () => {
        try {
          const res = await fetch("/api/auth/logout", {
            method: "POST",
          })

          if (res.ok) {
            window.location.href = "/login"
          } else {
            alert("Error al cerrar sesión")
          }
        } catch (err) {
          console.error("Logout error:", err)
          alert("Error inesperado al cerrar sesión")
        }
      })
    </script>
  </body>
</html>
