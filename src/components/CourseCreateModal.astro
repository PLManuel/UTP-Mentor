<div>
  <button
    id="openModalBtn"
    class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors duration-200 flex items-center space-x-2"
  >
    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
    </svg>
    <span>Agregar Nuevo Curso</span>
  </button>

  <dialog
    id="courseModal"
    class="rounded-lg shadow-xl max-w-md w-full mx-auto p-0 backdrop:bg-black backdrop:bg-opacity-50"
  >
    <div class="bg-white rounded-lg w-full">
      <div
        class="flex items-center justify-between p-6 border-b border-gray-200"
      >
        <h3 class="text-lg font-semibold text-gray-900">Crear Nuevo Curso</h3>
        <button
          id="closeModalBtn"
          class="text-gray-400 hover:text-gray-600 transition-colors duration-200"
        >
          <svg
            class="w-6 h-6"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>

      <form id="courseForm" class="p-6">
        <div class="mb-4">
          <label
            for="courseName"
            class="block text-sm font-medium text-gray-700 mb-2"
          >
            Nombre del Curso
          </label>
          <input
            type="text"
            id="courseName"
            name="nombre"
            required
            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent"
            placeholder="Ingresa el nombre del curso"
          />
        </div>

        <div
          id="errorMessage"
          class="hidden mb-4 p-3 bg-red-50 border border-red-200 rounded-lg"
        >
          <div class="flex items-center">
            <svg
              class="w-5 h-5 text-red-400 mr-2"
              fill="currentColor"
              viewBox="0 0 20 20"
            >
              <path
                fill-rule="evenodd"
                d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
                clip-rule="evenodd"></path>
            </svg>
            <p id="errorText" class="text-red-800 text-sm"></p>
          </div>
        </div>

        <div
          id="successMessage"
          class="hidden mb-4 p-3 bg-green-50 border border-green-200 rounded-lg"
        >
          <div class="flex items-center">
            <svg
              class="w-5 h-5 text-green-400 mr-2"
              fill="currentColor"
              viewBox="0 0 20 20"
            >
              <path
                fill-rule="evenodd"
                d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                clip-rule="evenodd"></path>
            </svg>
            <p class="text-green-800 text-sm">Curso creado exitosamente</p>
          </div>
        </div>

        <div class="flex justify-end space-x-3">
          <button
            type="button"
            id="cancelBtn"
            class="px-4 py-2 text-gray-700 bg-gray-100 hover:bg-gray-200 rounded-lg font-medium transition-colors duration-200"
          >
            Cancelar
          </button>
          <button
            type="submit"
            id="submitBtn"
            class="px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-medium transition-colors duration-200 flex items-center space-x-2"
          >
            <span id="submitText">Crear Curso</span>
            <svg
              id="loadingSpinner"
              class="hidden w-4 h-4 animate-spin"
              fill="none"
              viewBox="0 0 24 24"
            >
              <circle
                class="opacity-25"
                cx="12"
                cy="12"
                r="10"
                stroke="currentColor"
                stroke-width="4"></circle>
              <path
                class="opacity-75"
                fill="currentColor"
                d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
              ></path>
            </svg>
          </button>
        </div>
      </form>
    </div>
  </dialog>
</div>

<script>
  document.addEventListener("astro:page-load", () => {
    const openModalBtn = document.getElementById(
      "openModalBtn"
    ) as HTMLButtonElement
    const closeModalBtn = document.getElementById(
      "closeModalBtn"
    ) as HTMLButtonElement
    const cancelBtn = document.getElementById("cancelBtn") as HTMLButtonElement
    const courseModal = document.getElementById(
      "courseModal"
    ) as HTMLDialogElement
    const courseForm = document.getElementById("courseForm") as HTMLFormElement
    const courseName = document.getElementById("courseName") as HTMLInputElement
    const submitBtn = document.getElementById("submitBtn") as HTMLButtonElement
    const submitText = document.getElementById("submitText") as HTMLElement
    const loadingSpinner = document.getElementById(
      "loadingSpinner"
    ) as HTMLElement
    const errorMessage = document.getElementById("errorMessage") as HTMLElement
    const errorText = document.getElementById("errorText") as HTMLElement
    const successMessage = document.getElementById(
      "successMessage"
    ) as HTMLElement

    function openModal() {
      courseModal.showModal()
    }

    function closeModal() {
      courseModal.close()
      courseForm.reset()
      hideMessages()
      resetSubmitButton()
    }

    function hideMessages() {
      errorMessage.classList.add("hidden")
      successMessage.classList.add("hidden")
    }

    function showError(message: any) {
      errorText.textContent = message
      errorMessage.classList.remove("hidden")
      successMessage.classList.add("hidden")
    }

    function showSuccess() {
      successMessage.classList.remove("hidden")
      errorMessage.classList.add("hidden")
    }

    function showLoading() {
      submitBtn.disabled = true
      submitText.textContent = "Creando..."
      loadingSpinner.classList.remove("hidden")
    }

    function resetSubmitButton() {
      submitBtn.disabled = false
      submitText.textContent = "Crear Curso"
      loadingSpinner.classList.add("hidden")
    }

    openModalBtn.addEventListener("click", openModal)
    closeModalBtn.addEventListener("click", closeModal)
    cancelBtn.addEventListener("click", closeModal)

    courseModal.addEventListener("click", (e) => {
      if (e.target === courseModal) {
        closeModal()
      }
    })

    courseForm.addEventListener("submit", async (e) => {
      e.preventDefault()

      const nombre = courseName.value.trim()

      if (!nombre) {
        showError("El nombre del curso es requerido")
        return
      }

      hideMessages()
      showLoading()

      try {
        const response = await fetch("/api/courses/create", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ nombre }),
        })

        if (response.ok) {
          showSuccess()
          courseForm.reset()
        } else {
          const errorData = await response.json().catch(() => ({}))
          showError(errorData.message || "Error al crear el curso")
        }
      } catch (error) {
        console.error("Error:", error)
        showError("Error de conexi√≥n. Intenta nuevamente.")
      } finally {
        resetSubmitButton()
        closeModal()
        window.location.reload()
      }
    })
  })
</script>

<style>
  dialog {
    margin: auto;
    border: none;
    padding: 0;
  }

  dialog::backdrop {
    background-color: rgba(0, 0, 0, 0.5);
  }

  dialog[open] {
    animation: fadeIn 0.2s ease-out;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
