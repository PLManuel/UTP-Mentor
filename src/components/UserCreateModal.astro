<div>
  <button
    id="openModalBtn"
    class="inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white text-sm font-medium rounded-lg shadow-sm transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
  >
    <svg
      class="w-4 h-4 mr-2"
      fill="none"
      stroke="currentColor"
      viewBox="0 0 24 24"
    >
      <path
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
    </svg>
    Crear nuevo
  </button>

  <dialog
    id="userModal"
    class="rounded-lg backdrop:bg-black/50 shadow-xl border-0 p-0 max-w-md w-full self-center mx-auto"
  >
    <div class="bg-white rounded-lg overflow-hidden">
      <div
        class="flex items-center justify-between px-6 py-4 bg-gray-50 border-b border-gray-200"
      >
        <h3 class="text-lg font-semibold text-gray-900">
          Registrar nuevo usuario
        </h3>
        <button
          id="closeModalBtn"
          class="text-gray-400 hover:text-gray-600 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 rounded-full p-1"
        >
          <svg
            class="w-5 h-5"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>

      <form id="userForm" class="px-6 py-4 space-y-4">
        <div class="grid grid-cols-2 gap-4">
          <div>
            <label
              for="nombres"
              class="block text-sm font-medium text-gray-700 mb-1"
            >
              Nombre <span class="text-red-500">*</span>
            </label>
            <input
              type="text"
              id="nombres"
              name="nombres"
              required
              class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm"
              placeholder="Ingrese el nombre"
            />
          </div>

          <div>
            <label
              for="apellidos"
              class="block text-sm font-medium text-gray-700 mb-1"
            >
              Apellido <span class="text-red-500">*</span>
            </label>
            <input
              type="text"
              id="apellidos"
              name="apellidos"
              required
              class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm"
              placeholder="Ingrese el apellido"
            />
          </div>
        </div>

        <div>
          <label for="dni" class="block text-sm font-medium text-gray-700 mb-1">
            DNI <span class="text-red-500">*</span>
          </label>
          <input
            type="text"
            id="dni"
            name="dni"
            required
            pattern="[0-9]{8}"
            maxlength="8"
            class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm"
            placeholder="12345678"
          />
        </div>

        <div>
          <label
            for="email"
            class="block text-sm font-medium text-gray-700 mb-1"
          >
            Correo electrónico <span class="text-red-500">*</span>
          </label>
          <input
            type="email"
            id="email"
            name="email"
            required
            class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm"
            placeholder="usuario@ejemplo.com"
          />
        </div>

        <div>
          <label
            for="contraseña"
            class="block text-sm font-medium text-gray-700 mb-1"
          >
            Contraseña <span class="text-red-500">*</span>
          </label>
          <input
            type="password"
            id="contraseña"
            name="contraseña"
            required
            minlength="8"
            class="w-full px-3 py-2 pr-10 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm"
            placeholder="Mínimo 8 caracteres"
          />
        </div>

        <div>
          <label
            for="roles"
            class="block text-sm font-medium text-gray-700 mb-1"
          >
            Rol <span class="text-red-500">*</span>
          </label>
          <select
            id="roles"
            name="roles"
            required
            class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-sm bg-white"
          >
            <option value="">Seleccione un rol</option>
            <option value="ADMINISTRADOR">Administrador</option>
            <option value="PROFESOR">Profesor</option>
            <option value="ALUMNO">Alumno</option>
          </select>
        </div>

        <div
          class="flex items-center justify-end space-x-3 pt-4 border-t border-gray-200"
        >
          <button
            type="button"
            id="cancelBtn"
            class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition-colors duration-200"
          >
            Cancelar
          </button>
          <button
            type="submit"
            class="px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed"
          >
            <span id="submitText">Crear usuario</span>
            <svg
              id="loadingIcon"
              class="hidden w-4 h-4 ml-2 animate-spin"
              fill="none"
              viewBox="0 0 24 24"
            >
              <circle
                class="opacity-25"
                cx="12"
                cy="12"
                r="10"
                stroke="currentColor"
                stroke-width="4"></circle>
              <path
                class="opacity-75"
                fill="currentColor"
                d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
              ></path>
            </svg>
          </button>
        </div>
      </form>
    </div>
  </dialog>
</div>

<script>
  document.addEventListener("astro:page-load", () => {
    const openModalBtn = document.getElementById("openModalBtn")
    const closeModalBtn = document.getElementById("closeModalBtn")
    const cancelBtn = document.getElementById("cancelBtn")
    const userModal = document.getElementById("userModal") as HTMLDialogElement
    const userForm = document.getElementById("userForm") as HTMLFormElement
    const submitText = document.getElementById("submitText") as HTMLElement
    const loadingIcon = document.getElementById("loadingIcon")

    openModalBtn?.addEventListener("click", () => {
      userModal?.showModal()
    })

    closeModalBtn?.addEventListener("click", () => {
      userModal?.close()
      userForm?.reset()
    })

    cancelBtn?.addEventListener("click", () => {
      userModal?.close()
      userForm?.reset()
    })

    userModal?.addEventListener("click", (e) => {
      if (e.target === userModal) {
        userModal.close()
        userForm?.reset()
      }
    })

    userForm?.addEventListener("submit", async (e) => {
      e.preventDefault()

      const submitBtn = e.submitter as HTMLButtonElement

      submitBtn.disabled = true
      submitText.textContent = "Creando..."
      loadingIcon?.classList.remove("hidden")

      const formData = new FormData(userForm)
      const rolSeleccionado = formData.get("roles")

      // Cuerpo base sin el rol
      const payloadBase = {
        nombre: formData.get("nombres"),
        apellido: formData.get("apellidos"),
        dni: formData.get("dni"),
        correo: formData.get("email"),
        contraseña: formData.get("contraseña"),
      }

      const isAlumno = rolSeleccionado === "ALUMNO"
      const url = isAlumno ? "/api/user/registerStudent" : "/api/user/register"
      const payload = isAlumno
        ? payloadBase
        : { ...payloadBase, rol: rolSeleccionado }

      try {
        const res = await fetch(url, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(payload),
        })

        const result = await res.json()

        if (!res.ok) {
          alert(result.error || "Error al registrar usuario")
        } else {
          alert("Usuario creado correctamente")
          userModal.close()
          userForm?.reset()
        }
      } catch (error) {
        console.error("Error al registrar:", error)
        alert("Error inesperado")
      } finally {
        submitBtn.disabled = false
        submitText.textContent = "Crear usuario"
        loadingIcon?.classList.add("hidden")
        window.location.reload()
      }
    })
  })
</script>
