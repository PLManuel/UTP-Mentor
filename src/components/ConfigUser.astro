---
interface UserInfo {
  nombre?: string
  apellido?: string
  correo?: string
  dni?: string
}

const userInfoCookie = Astro.cookies.get("userInfo")?.value
const userInfo: UserInfo = userInfoCookie
  ? JSON.parse(decodeURIComponent(userInfoCookie))
  : {}

const {
  nombre: userName = "",
  apellido: userLastname = "",
  correo: userEmail = "",
  dni: userDni = "",
} = userInfo
---

<form id="updateUserForm" class="mt-5 grid md:grid-cols-2 grid-cols-1 gap-3">
  <fieldset>
    <label for="nombre">Nombre</label>
    <input
      name="nombre"
      type="text"
      placeholder="Ingresa el nombre"
      required
      value={userName}
    />
  </fieldset>

  <fieldset>
    <label for="apellido">Apellido</label>
    <input
      name="apellido"
      type="text"
      placeholder="Ingresa el apellido"
      required
      value={userLastname}
    />
  </fieldset>

  <fieldset class="md:col-span-2">
    <label for="dni">DNI</label>
    <input
      name="dni"
      type="text"
      placeholder="Ingresa el DNI"
      required
      pattern="[0-9]{8}"
      title="8 dígitos"
      value={userDni}
    />
  </fieldset>

  <fieldset class="md:col-span-2">
    <label for="correo">Correo</label>
    <input
      name="correo"
      type="email"
      placeholder="Ingresa el correo"
      required
      value={userEmail}
    />
  </fieldset>

  <fieldset class="md:col-span-2">
    <label for="contraseña">Contraseña</label>
    <input
      name="contraseña"
      type="password"
      placeholder="Ingresa la contraseña"
      required
      minlength="8"
      autocomplete="new-password"
    />
  </fieldset>

  <button
    type="submit"
    class="bg-violet-700 hover:bg-violet-900 transition duration-300 text-white rounded-lg md:col-span-2 mx-5 py-2 block cursor-pointer"
  >
    Actualizar
  </button>
</form>

<script>
  document.addEventListener("astro:page-load", () => {
    const updateUserForm = document.getElementById(
      "updateUserForm"
    ) as HTMLFormElement
    const submitButton = updateUserForm?.querySelector('button[type="submit"]')

    if (!updateUserForm || !submitButton) {
      return
    }

    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/
    const dniRegex = /^\d{8}$/
    const nombreApellidoRegex = /^[A-Za-zÁÉÍÓÚáéíóúÑñ\s]+$/
    const contraseñaMinLength = 8

    updateUserForm.addEventListener("submit", async (e) => {
      e.preventDefault()
      const formData = new FormData(updateUserForm)
      const data = Object.fromEntries(formData.entries())

      const nombre = data.nombre.toString().trim()
      const apellido = data.apellido.toString().trim()
      const dni = data.dni.toString().trim()
      const correo = data.correo.toString().trim()
      const contraseña = data.contraseña.toString()

      if (!nombreApellidoRegex.test(nombre)) {
        alert("Nombre solo debe contener letras")
        return
      }

      if (!nombreApellidoRegex.test(apellido)) {
        alert("Apellido solo debe contener letras")
        return
      }

      if (!dniRegex.test(dni)) {
        alert("DNI debe tener 8 dígitos numéricos")
        return
      }

      if (!emailRegex.test(correo)) {
        alert("Correo electrónico inválido")
        return
      }

      if (contraseña.length < contraseñaMinLength) {
        alert("La contraseña debe tener al menos 8 caracteres")
        return
      }

      submitButton.setAttribute("disabled", "true")
      submitButton.textContent = "Actualizando..."

      try {
        const res = await fetch("/api/auth/updateUser", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({
            nombre,
            apellido,
            dni,
            correo,
            contraseña,
          }),
        })

        if (!res.ok) {
          const error = await res.json()
          throw new Error(error.error || "Error al actualizar usuario")
        }

        alert("Usuario actualizado correctamente")
        formData.forEach((value, key) => {
          updateUserForm[key].value = value
        })
      } catch (err) {
        if (err instanceof Error) {
          alert(err.message)
        } else {
          alert("Error desconocido")
        }
      } finally {
        submitButton.removeAttribute("disabled")
        submitButton.textContent = "Actualizar"
        window.location.reload()
      }
    })
  })
</script>

<style>
  @reference "../styles/global.css";

  fieldset {
    @apply flex flex-col;

    > label {
      @apply font-semibold ml-1 mb-0.5;
    }

    > input,
    > select {
      @apply border rounded-lg py-2 px-1 w-full placeholder:pl-1;
    }
  }
</style>
