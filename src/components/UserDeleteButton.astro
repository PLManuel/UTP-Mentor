---
interface Props {
  userId: string
}
const { userId } = Astro.props
---

<button
  data-id={userId}
  class="delete-user-btn inline-flex w-fit items-center gap-2 bg-red-600 hover:bg-red-700 text-white text-sm font-medium px-4 py-2 rounded-md shadow transition duration-200"
>
  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"
    ></path>
  </svg>
  Eliminar
</button>

<script>
  document.addEventListener("astro:page-load", () => {
    const deleteButtons = document.querySelectorAll(".delete-user-btn")

    deleteButtons.forEach((btn) => {
      btn.addEventListener("click", async () => {
        const id = btn.getAttribute("data-id")
        if (!id) return

        if (!confirm("¿Estás seguro de que deseas eliminar este usuario?"))
          return

        try {
          const res = await fetch("/api/user/delete", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ id }),
          })

          const result = await res.json()

          if (!res.ok) {
            alert(result.error || "Error al eliminar")
          } else {
            alert("Usuario eliminado correctamente")
            location.reload()
          }
        } catch (err) {
          console.error("Error:", err)
          alert("Error de red o del servidor")
        }
      })
    })
  })
</script>
