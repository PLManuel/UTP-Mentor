---
import UserCreateModal from "./UserCreateModal.astro"
import UserDeleteButton from "./UserDeleteButton.astro"
import UserUpdateModal from "./UserUpdateModal.astro"

let users = []
let error = null

const token = Astro.cookies.get("authToken")?.value

const userInfoCookie = Astro.cookies.get("userInfo")?.value
let currentUserId = null

if (userInfoCookie) {
  const parsed = JSON.parse(decodeURIComponent(userInfoCookie))
  currentUserId = parsed.id
}

try {
  const response = await fetch("http://localhost:8080/usuario/obtener", {
    method: "GET",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${token}`,
    },
  })
  if (response.ok) {
    users = await response.json()
  } else {
    error = `Error: ${response.status} ${response.statusText}`
  }
} catch (err: any) {
  error = `Error de conexi√≥n: ${err.message}`
}
---

<div class="w-full max-w-6xl mx-auto">
  <div class="bg-white rounded-lg shadow-lg overflow-hidden">
    <div
      class="bg-gray-50 px-4 sm:px-6 py-4 border-b border-gray-200 flex justify-between items-center"
    >
      <div>
        <h2 class="text-lg sm:text-xl font-semibold text-gray-800">
          Panel de usuarios
        </h2>
        <p class="text-sm text-gray-600 mt-1">
          Total de usuarios: {users.length}
        </p>
      </div>
      <UserCreateModal />
    </div>
    {
      error ? (
        <div class="p-4 sm:p-6">
          <div class="bg-red-50 border border-red-200 rounded-md p-4">
            <div class="flex">
              <div class="flex-shrink-0">
                <svg
                  class="h-5 w-5 text-red-400"
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fill-rule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
                    clip-rule="evenodd"
                  />
                </svg>
              </div>
              <div class="ml-3">
                <h3 class="text-sm font-medium text-red-800">
                  Error al cargar usuarios
                </h3>
                <p class="text-sm text-red-700 mt-1">{error}</p>
              </div>
            </div>
          </div>
        </div>
      ) : users.length === 0 ? (
        <div class="p-8 sm:p-12 text-center">
          <svg
            class="mx-auto h-12 w-12 text-gray-400"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"
            />
          </svg>
          <h3 class="mt-2 text-sm font-medium text-gray-900">
            No hay usuarios
          </h3>
          <p class="mt-1 text-sm text-gray-500">
            No se encontraron usuarios en el sistema.
          </p>
        </div>
      ) : (
        <div class="overflow-x-auto">
          <div class="bg-gray-50 grid grid-cols-5 gap-2 sm:gap-4 px-4 sm:px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider border-b border-gray-200">
            <div class="font-semibold">ID</div>
            <div class="font-semibold">Nombre/Apellido</div>
            <div class="font-semibold">Correo/DNI</div>
            <div class="font-semibold">Rol/Estado</div>
            <div class="font-semibold">Acciones</div>
          </div>

          <div class="divide-y divide-gray-200">
            {users.map((user: any, index: any) => (
              <div
                class={`grid grid-cols-5 gap-2 sm:gap-4 px-4 sm:px-6 py-4 hover:bg-gray-50 transition-colors duration-150 ${index % 2 === 0 ? "bg-white" : "bg-gray-50"}`}
              >
                <div class="flex items-center">
                  <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                    {user.id}
                  </span>
                </div>

                <div class="flex flex-col justify-center min-h-[3rem]">
                  <div class="text-sm font-medium text-gray-900 truncate">
                    {user.nombres || "-"}
                  </div>
                  <div class="text-sm text-gray-600 truncate">
                    {user.apellidos || "-"}
                  </div>
                </div>

                <div class="flex flex-col justify-center min-h-[3rem]">
                  <div
                    class="text-sm text-gray-900 truncate"
                    title={user.email}
                  >
                    {user.email}
                  </div>
                  <div class="text-sm text-gray-600">{user.dni || "-"}</div>
                </div>

                <div class="flex flex-col justify-center gap-1 min-h-[3rem]">
                  <span
                    class={`inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium w-fit ${
                      user.roles === "ADMINISTRADOR"
                        ? "bg-purple-100 text-purple-800"
                        : user.roles === "PROFESOR"
                          ? "bg-blue-100 text-blue-800"
                          : "bg-green-100 text-green-800"
                    }`}
                  >
                    {user.roles}
                  </span>
                </div>
                <div class="flex flex-col gap-1.5 justify-center min-h-[3rem] text-sm">
                  {user.id !== currentUserId && (
                    <>
                      <UserDeleteButton userId={user.id} />
                      <UserUpdateModal userId={user.id} isAdminUser />
                    </>
                  )}
                </div>
              </div>
            ))}
          </div>
        </div>
      )
    }
  </div>
</div>
